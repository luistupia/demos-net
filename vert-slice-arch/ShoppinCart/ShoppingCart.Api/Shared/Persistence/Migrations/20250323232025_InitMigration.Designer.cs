// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShoppingCart.Api.Shared.Persistence;

#nullable disable

namespace ShoppingCart.Api.Shared.Persistence.Migrations
{
    [DbContext(typeof(ShoppingDbContext))]
    [Migration("20250323232025_InitMigration")]
    partial class InitMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("ShoppingCart.Api.Shared.Domain.Entities.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("code");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("createBy");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("createOn");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("lastModifiedBy");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("lastModifiedOn");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("pK_shopping_carts");

                    b.ToTable("shopping_carts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("514184ba-8650-4f38-a834-78ed115deba4"),
                            Code = "INIT_CODE",
                            CreateBy = "",
                            CreateOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedBy = "",
                            LastModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "SYSTEM"
                        },
                        new
                        {
                            Id = new Guid("c5a99654-a34f-44cd-a1d5-095b2a054f57"),
                            Code = "INIT_PASS",
                            CreateBy = "",
                            CreateOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedBy = "",
                            LastModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "SYSTEM"
                        });
                });

            modelBuilder.Entity("ShoppingCart.Api.Shared.Domain.Entities.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<Guid>("CartId")
                        .HasColumnType("TEXT")
                        .HasColumnName("cartId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("code");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("createBy");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("createOn");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("imageUrl");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("lastModifiedBy");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("lastModifiedOn");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT")
                        .HasColumnName("price");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER")
                        .HasColumnName("quantity");

                    b.HasKey("Id")
                        .HasName("pK_items");

                    b.HasIndex("CartId")
                        .HasDatabaseName("iX_items_cartId");

                    b.ToTable("items", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("24c5cf13-3533-4ba9-a32a-5ea8201124e1"),
                            CartId = new Guid("514184ba-8650-4f38-a834-78ed115deba4"),
                            Code = "ITEM_CODE",
                            CreateBy = "",
                            CreateOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "MODERNO",
                            ImageUrl = "",
                            LastModifiedBy = "",
                            LastModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PHONE X",
                            Price = 15.00m,
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("55b1364a-f41e-4c15-aaee-725454d6a38e"),
                            CartId = new Guid("514184ba-8650-4f38-a834-78ed115deba4"),
                            Code = "ITEM_AM",
                            CreateBy = "",
                            CreateOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "XXXXXX",
                            ImageUrl = "",
                            LastModifiedBy = "",
                            LastModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MACBOOK",
                            Price = 13.00m,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("ShoppingCart.Api.Shared.Domain.Entities.Item", b =>
                {
                    b.HasOne("ShoppingCart.Api.Shared.Domain.Entities.Cart", "Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fK_items_carts_cartId");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("ShoppingCart.Api.Shared.Domain.Entities.Cart", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
